# Triggers a build each time you push to the 'live' branch, and uploads it to the gh-pages branch using the gh-pages utility
# Need to set the secret "ACTIONS_DEPLOY_ACCESS_TOKEN"

name: deploy

on:
  push:
    branches: [ live ]

jobs:
  build:
    # runs-on: mq-ubuntu-20
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Node
      uses: actions/setup-node@v1
      with:
        node-version: 16.x

    - name: Install deps
      # run: npm install
      run: npm install --include=dev

    # - name: Run the tests and generate coverage report
    #   run: npm test -- --coverage

    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v1

    - name: Predeploy (build)
      run: npm run predeploy

    # - name: Deploy
    #   run: |
    #     git config --global user.name $user_name
    #     git config --global user.email $user_email
    #     git remote set-url origin https://${github_token}@github.com/balkanfilms.gr.website.live
    #     npm run deploy
    #   env:
    #     user_name: 'github-actions[bot]'
    #     user_email: 'github-actions[bot]@users.noreply.github.com'
    #     # Update: nope: r/w was already enabled for it and it didn't work..
    #     github_token: ${{ secrets.ACTIONS_DEPLOY_ACCESS_TOKEN }}
    #     repository: ${{ github.repository }}


  
    # To allow this repo to push to another repo, go to https://github.com/<username>/<target_repo>/settings/actions
    # and under Access change to "Accessible from repositories in the '<your org>' organization" (not sure how it works for personal)
    - name: Deploy to target live repo
      run: |
        target_repo="${{ github.repository_owner }}/${target_repo_pref}balkanfilms.gr.website.live.git"

        tmp_dir=$(mktemp -d)
        cp -r dist/videographer-portfolio/* $tmp_dir/
        cd $tmp_dir
        git init
        git config user.name github-actions
        git config user.email github-actions@github.com
        target_url="https://${github_token}@github.com/${target_repo}"
        git remote add origin "$target_url"
        
        # Fetch gh-pages branch if it exists, otherwise create it
        if git ls-remote --heads "$target_url" gh-pages; then
          git fetch --depth=50 origin gh-pages
          git checkout gh-pages
        else
          git checkout --orphan gh-pages
        fi
        
        git add .
        git commit -m "Deploy from https://github.com/${{ github.repository }}/commit/${{ github.sha }}"
        
        echo "Force-pushing to $target_url"
        # Only keep latest 50 commits
        if [ $(git rev-list --count HEAD) -ge 50 ]; then
            git push --force origin `git rev-parse HEAD~50`:gh-pages
        else
            git push --force origin gh-pages
        fi
      env:
        github_token: ${{ secrets.ACTIONS_DEPLOY_ACCESS_TOKEN }}